# -*- coding: utf-8 -*-
"""
?????? ????????? ?? ?????? prompt_toolkit (75% ??????)
"""

import os
from typing import Optional
from prompt_toolkit.buffer import Buffer
from prompt_toolkit.lexers import PygmentsLexer
from prompt_toolkit.document import Document
from pygments.lexers import get_lexer_by_name, get_lexer_for_filename
from pygments.util import ClassNotFound
from seditor.terminal.layout import Layout


def get_lexer_for_file(file_path: Optional[str]) -> Optional[PygmentsLexer]:
    """
    ???????? ?????? Pygments ??? ????? ?? ?????? ??????????
    
    Args:
        file_path: ???? ? ?????
        
    Returns:
        PygmentsLexer ??? None ???? ?????? ?? ??????
    """
    if not file_path:
        return None
    
    try:
        # ??????? ???????? ?????? ?? ????? ?????
        lexer = get_lexer_for_filename(file_path)
        return PygmentsLexer(lexer)
    except ClassNotFound:
        # ???? ?? ???????, ??????? ?? ??????????
        ext = os.path.splitext(file_path)[1].lstrip('.')
        if not ext:
            return None
        
        # ??????? ?????????? ?? ?????
        ext_map = {
            'py': 'python',
            'js': 'javascript',
            'jsx': 'jsx',
            'ts': 'typescript',
            'tsx': 'tsx',
            'html': 'html',
            'css': 'css',
            'json': 'json',
            'yaml': 'yaml',
            'yml': 'yaml',
            'md': 'markdown',
            'sh': 'bash',
            'bash': 'bash',
            'zsh': 'bash',
            'c': 'c',
            'cpp': 'cpp',
            'h': 'c',
            'hpp': 'cpp',
            'java': 'java',
            'go': 'go',
            'rs': 'rust',
            'rb': 'ruby',
            'php': 'php',
            'sql': 'sql',
            'xml': 'xml',
            'toml': 'toml',
            'ini': 'ini',
            'conf': 'ini',
        }
        
        language = ext_map.get(ext.lower())
        if language:
            try:
                lexer = get_lexer_by_name(language)
                return PygmentsLexer(lexer)
            except ClassNotFound:
                pass
    
    return None


class EditorPanePTK:
    """?????? ????????? ?????? ?? ?????? prompt_toolkit"""

    def __init__(self, layout: Layout):
        """
        ????????????? ?????? ?????????
        
        Args:
            layout: ?????? ???????? ??????
        """
        self.layout = layout
        self.x, self.y, self.width, self.height = layout.get_editor_bounds()
        
        # ???? ? ?????
        self.file_path: Optional[str] = None
        self.buffer: Optional[Buffer] = None
        
        # ??????? ????? prompt_toolkit
        self._create_buffer()
    
    def _create_buffer(self) -> None:
        """??????? ????? ????? prompt_toolkit"""
        self.buffer = Buffer(
            name='editor',
            multiline=True,
            # ????????? ?????????? ???????, ??? ??? ?? ????? ????????? ???? ????? KeyBindings
            enable_history_search=False,
        )
    
    def load_file(self, file_path: str) -> bool:
        """
        ????????? ???? ? ????????
        
        Args:
            file_path: ???? ? ?????
            
        Returns:
            True ???? ???? ??????? ????????, False ?????
        """
        try:
            # ??????? UTF-8
            with open(file_path, 'r', encoding='utf-8') as f:
                content = f.read()
            
            # ????????????? ????? ? ?????
            self.buffer.text = content
            self.file_path = file_path
            
            # ????????????? ?????? ??? ????????? ??????????
            lexer = get_lexer_for_file(file_path)
            if lexer:
                # ????????? ???????? ? ????????
                # ??? ????? ?????????????? ??? ?????????? ????? prompt_toolkit
                pass  # ?????? ????? ??????????? ??? ???????? BufferControl
            
            # ?????????? ?????? ? ??????
            self.buffer.cursor_position = 0
            
            return True
            
        except UnicodeDecodeError:
            # ???? ?? ? UTF-8, ??????? ?????? ?????????
            for encoding in ['latin-1', 'cp1251', 'iso-8859-1']:
                try:
                    with open(file_path, 'r', encoding=encoding) as f:
                        content = f.read()
                    self.buffer.text = content
                    self.file_path = file_path
                    self.buffer.cursor_position = 0
                    return True
                except (UnicodeDecodeError, OSError):
                    continue
            return False
        except (OSError, PermissionError) as e:
            return False
    
    def get_file_path(self) -> Optional[str]:
        """???????? ???? ? ???????? ?????"""
        return self.file_path
    
    def get_buffer(self) -> Buffer:
        """???????? ????? prompt_toolkit"""
        return self.buffer
    
    def get_text(self) -> str:
        """???????? ???? ????? ?? ??????"""
        return self.buffer.text if self.buffer else ""
    
    def get_lexer(self) -> Optional[PygmentsLexer]:
        """???????? ?????? ??? ???????? ?????"""
        return get_lexer_for_file(self.file_path)
    
    def save_file(self, file_path: Optional[str] = None) -> bool:
        """
        ????????? ????
        
        Args:
            file_path: ???? ? ????? (???? None, ???????????? ???????)
            
        Returns:
            True ???? ???? ??????? ????????, False ?????
        """
        if not self.buffer:
            return False
        
        save_path = file_path or self.file_path
        if not save_path:
            return False
        
        try:
            with open(save_path, 'w', encoding='utf-8') as f:
                f.write(self.buffer.text)
            
            if not file_path:
                # ????????? ???? ???? ????????? ? ??? ?? ????
                self.file_path = save_path
            
            return True
        except (OSError, PermissionError):
            return False
