"""
??????? ??? ?????? ? ??????? ? ????????????
"""

import os
from pathlib import Path
from typing import List, Tuple


def scan_directory(directory: str) -> List[Tuple[str, bool, str]]:
    """
    ??????????? ?????????? ? ??????? ?????? ?????? ? ??????????

    Args:
        directory: ???? ? ?????????? ??? ????????????

    Returns:
        ?????? ???????? (???, ????????_???????????, ??????_????)
    """
    items = []
    try:
        for item in sorted(os.listdir(directory)):
            # ?????????? ??????? ????? (???????????? ? .)
            if item.startswith('.'):
                continue

            full_path = os.path.join(directory, item)
            is_dir = os.path.isdir(full_path)

            items.append((item, is_dir, full_path))
    except PermissionError:
        # ??? ???? ??????? ? ??????????
        pass

    # ?????????: ??????? ??????????, ????? ?????
    items.sort(key=lambda x: (not x[1], x[0].lower()))

    return items


def is_directory(path: str) -> bool:
    """?????????, ???????? ?? ???? ???????????"""
    return os.path.isdir(path)


def is_file(path: str) -> bool:
    """?????????, ???????? ?? ???? ??????"""
    return os.path.isfile(path)


def get_parent_directory(path: str) -> str:
    """???????? ???????????? ??????????"""
    return os.path.dirname(os.path.abspath(path))


def normalize_path(path: str) -> str:
    """????????????? ???? (?????? . ? ..)"""
    return os.path.normpath(os.path.abspath(path))


def delete_file(path: str) -> bool:
    """
    ??????? ????

    Args:
        path: ???? ? ?????

    Returns:
        True ???? ???? ?????? ???????, False ?????
    """
    try:
        if os.path.isdir(path):
            os.rmdir(path)  # ???????? ?????? ??????????
        else:
            os.remove(path)  # ???????? ?????
        return True
    except (OSError, PermissionError):
        return False
